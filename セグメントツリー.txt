const int mx_n = 300000; //num<=2*10^5まで対応
int siz, dat[2*mx_n-1];

void init(int num){
  siz = 1;
  while(siz < num) siz *= 2;
  rep(i, 2*siz-1) dat[i] = INF;
}
//k番目の値をaに書き換える
void update(int k, int a){
  k += siz-1;
  dat[k] = a;
  while(k>0){
    k = (k-1)/2;
    dat[k] = min(dat[k*2+1], dat[k*2+2]);
  }
}

//区間[a, b)の最小値を求める
//使い方: query(a, b, 0, 0, siz)
int query(int a, int b, int k, int l, int r){
  if(r <= a || b <= l) return INF;

  if(a <= l && r <= b) return dat[k];
  else{
    int vl = query(a, b, k*2+1, l, (l+r)/2);
    int vr = query(a, b, k*2+2, (l+r)/2, r);
    return min(vl, vr);
  }
}

//使い方
・initで初期化。numは要素数
・updateで値を挿入。
・区間最小値をquery(a,b,0,0,siz)で求める。